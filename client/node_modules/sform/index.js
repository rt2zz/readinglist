
var _ = require('lodash')
// var $ = require('jquery')
// console.log($)

function sform($form){
  console.log($form)
  this.$form = $form
  this.$form.submit(function(e){ e.preventDefault() })
  this.model = {}
}

sform.prototype.updateModel = function(data){
  var self = this
  if(data) this.model = data
  else{
    this.$form.find('[name]').each(function(i, elem){
      var $elem = $(elem)
      var name = $elem.attr('name')
      var val = $elem.val()
      self.model[name] = val
    })
  }
  console.log('udpated ', self.model)
  return this
}

sform.prototype.updateView = function(){
  var self = this
  _.forEach(this.model, function(val, key){
    self.$form.find('[name='+key+']').val(val)
  })
  return this
}

sform.prototype.submit = function(cb){
  this.$form.submit()
  return this
}

sform.prototype.onSubmit = function(cb){
  var self = this
  this.$form.submit(cb)
  return this
}

sform.prototype.sync = function(){
  var self = this
  this.$form.change(function(){
    console.log('changing')
    self.updateModel()
  })
  return this
}

sform.prototype.action = function(url){
  var self = this
  var xhr = this.xhr = new XMLHttpRequest();

  this.$form.submit(function(){
    xhr.open("post", url, true);
    xhr.setRequestHeader("Content-type", "application/json");
    xhr.send(JSON.stringify(self.model));
  })
  return this
}

sform.prototype.responder = function(cb){
  function reqListener () {
    if(this.readyState == 4 && this.status == 200) {
      cb(null, JSON.parse(this.responseText));
    }
  };
   
  this.xhr.onload = reqListener;
  return this
}

module.exports = function($form){

  return new sform($form)
}
