{
  "name": "msgpack-stream",
  "version": "0.0.1",
  "description": "Stream of msgpack protocol",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "dependencies": {
    "msgpack-js": "~0.1",
    "through": "~0.0"
  },
  "keywords": [
    "msgpack",
    "stream",
    "pipe",
    "frame"
  ],
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "license": "MIT",
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/msgpack-stream.git"
  },
  "readme": "#MsgPackStream\n\nStreams of framed [msgpack](http://wiki.msgpack.org/display/MSGPACK/Format+specification) messages.\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nactually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`.\n",
  "readmeFilename": "readme.markdown",
  "_id": "msgpack-stream@0.0.1",
  "dist": {
    "shasum": "bbb420c2a73566cd62f89f6c9a8123b022e5d669"
  },
  "_from": "msgpack-stream@0.0.1",
  "_resolved": "https://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.1.tgz"
}
