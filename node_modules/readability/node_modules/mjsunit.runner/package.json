{
  "name": "mjsunit.runner",
  "version": "0.1.3",
  "description": "Command line mjsunit runner which provides an easy way to hook into mjsunit and start running tests immediately..",
  "keywords": [
    "testing",
    "test",
    "runner",
    "unit testing",
    "command line"
  ],
  "maintainers": [
    {
      "name": "Elijah Insua",
      "email": "tmpvar@gmail.com"
    }
  ],
  "bugs": {
    "mail": "tmpvar@gmail.com",
    "url": "http://github.com/tmpvar/mjsunit.runner/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/tmpvar/mjsunit.runner/blob/master/LICENSE.txt"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "git://github.com/tmpvar/mjsunit.runner.git"
    }
  ],
  "dependencies": {},
  "engines": {
    "node": ">=0.1.9"
  },
  "directories": {
    "lib": "lib"
  },
  "readme": "Mjsunit test runner\n===================\n\nProvides an easy way to hook into mjsunit and start running tests immediately.\n\n\nUsage Example\n-------------\n**myproject/test/core.js**\n\n    exports.tests = {\n      aFailingTest : function() {\n        assertTrue(false);\n      },\n      aPassingTest : function() {\n        assertFalse(false);\n      }\n    };\n\n\n**myproject/test/runner.js**\n\n*Note:* if you want to use a custom variation of mjsunit, load it into the GLOBAL\nscope before requiring mjsunit.runner/lib/runner.\n\n    var suites = {\n      \"core\"   : { \n        cases: require(\"./core\").tests\n        /*  Other options\n        setUp    : function() { }, // called before every test\n        tearDown : function() { }, // called after every test\n        */\n      }\n    };\n\n    require(\"mjsunit.runner/lib/runner\").run(suites);\n\nRunning Tests\n-------------\n\n**All suites**\n\n    $ node myproject/test/runner.js\n\n    core      1/2                    50% passing\n    --------------------------------------------\n    TOTALS:   1/2                    50% passing\n\n**All Suites (Verbose) **\n    $ node myproject/test/runner.js --verbose\n    \n    Failure in core suite; method: aFailingTest\n    Failure: expected <true> found <false>\n        at Object.assertEquals (/usr/local/lib/node/libraries/mjsunit.js:93:5)\n        at /usr/local/lib/node/libraries/mjsunit.js:113:11\n        at /path/to/myproject/test/core.js:3:5\n        at /path/to/mjsunit.runner/lib/runner.js:36:25\n        at /path/to/mjsunit.runner/lib/runner.js:50:38\n        at Object.run (/path/to/mjsunit.runner/lib/runner.js:78:9)\n        at Object.<anonymous> (/path/to/myproject/test/runner.js:7:38)\n        at [object Object].<anonymous> (node.js:978:23)\n        at [object Object].emitSuccess (node.js:241:15)\n        at [object Object].<anonymous> (node.js:678:21)\n\n    core      1/2                    50% passing\n    --------------------------------------------\n    TOTALS:   1/2                    50% passing\n\n**Run a test in isolation**\n\n    $ node myproject/test/runner.js --verbose --suite core --test aFailingTest\n    \n    Failure in core suite; method: aFailingTest\n    Failure: expected <true> found <false>\n        at Object.assertEquals (/usr/local/lib/node/libraries/mjsunit.js:93:5)\n        at /usr/local/lib/node/libraries/mjsunit.js:113:11\n        at /path/to/myproject/test/core.js:3:5\n        at /path/to/mjsunit.runner/lib/runner.js:36:25\n        at Object.run (/path/to/mjsunit.runner/lib/runner.js:61:57)\n        at Object.<anonymous> (/path/to/myproject/test/runner.js:7:38)\n        at [object Object].<anonymous> (node.js:978:23)\n        at [object Object].emitSuccess (node.js:241:15)\n        at [object Object].<anonymous> (node.js:678:21)\n        at [object Object].emitSuccess (node.js:241:15)\n     \n    1 of 1 failed (0% success)\n    \n\n",
  "readmeFilename": "README.md",
  "_id": "mjsunit.runner@0.1.3",
  "dist": {
    "shasum": "5fd166a06b73f520d9c06ef2b0ed45baebb4764a"
  },
  "_from": "mjsunit.runner@>=0.1.0",
  "_resolved": "https://registry.npmjs.org/mjsunit.runner/-/mjsunit.runner-0.1.3.tgz"
}
